{"ts":1358065945014,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//setup Dependencies\nvar connect = require('connect')\n    , express = require('express')\n    , io = require('socket.io')\n    , port = (process.env.PORT || 8081);\n\n//Setup Express\nvar server = express.createServer();\nserver.configure(function(){\n    server.set('views', __dirname + '/views');\n    server.set('view options', { layout: false });\n    server.use(connect.bodyParser());\n    server.use(express.cookieParser());\n    server.use(express.session({ secret: \"shhhhhhhhh!\"}));\n    server.use(connect.static(__dirname + '/static'));\n    server.use(server.router);\n});\n\n//setup the errors\nserver.error(function(err, req, res, next){\n    if (err instanceof NotFound) {\n        res.render('404.jade', { locals: { \n                  title : '404 - Not Found'\n                 ,description: ''\n                 ,author: ''\n                 ,analyticssiteid: 'XXXXXXX' \n                },status: 404 });\n    } else {\n        res.render('500.jade', { locals: { \n                  title : 'The Server Encountered an Error'\n                 ,description: ''\n                 ,author: ''\n                 ,analyticssiteid: 'XXXXXXX'\n                 ,error: err \n                },status: 500 });\n    }\n});\nserver.listen( port);\n\n//Setup Socket.IO\nvar io = io.listen(server);\nio.sockets.on('connection', function(socket){\n  console.log('Client Connected');\n  socket.on('message', function(data){\n    socket.broadcast.emit('server_message',data);\n    socket.emit('server_message',data);\n  });\n  socket.on('disconnect', function(){\n    console.log('Client Disconnected.');\n  });\n});\n\n\n///////////////////////////////////////////\n//              Routes                   //\n///////////////////////////////////////////\n\n/////// ADD ALL YOUR ROUTES HERE  /////////\n\nserver.get('/', function(req,res){\n  res.render('index.jade', {\n    locals : { \n              title : 'Your Page Title'\n             ,description: 'Your Page Description'\n             ,author: 'Your Name'\n             ,analyticssiteid: 'XXXXXXX' \n            }\n  });\n});\n\n\n//A Route for Creating a 500 Error (Useful to keep around)\nserver.get('/500', function(req, res){\n    throw new Error('This is a 500 Error');\n});\n\n//The 404 Route (ALWAYS Keep this as the last route)\nserver.get('/*', function(req, res){\n    throw new NotFound;\n});\n\nfunction NotFound(msg){\n    this.name = 'NotFound';\n    Error.call(this, msg);\n    Error.captureStackTrace(this, arguments.callee);\n}\n\n\nconsole.log('Listening on http://0.0.0.0:' + port );\n"]],"start1":0,"start2":0,"length1":0,"length2":2481}]],"length":2481}
{"contributors":[],"silentsave":false,"ts":1358066008615,"patch":[[{"diffs":[[0," : '"],[-1,"Your Page Title"],[1,"Metanotes"],[0,"'\n  "]],"start1":1852,"start2":1852,"length1":23,"length2":17},{"diffs":[[0,"n: '"],[-1,"Your Page Description"],[1,"What are you studying?"],[0,"'\n  "]],"start1":1891,"start2":1891,"length1":29,"length2":30},{"diffs":[[0,"r: '"],[-1,"Your Name"],[1,"Sam G. and Jeramy C."],[0,"'\n  "]],"start1":1938,"start2":1938,"length1":17,"length2":28}]],"length":2487,"saved":false}
